version: '3.3'

networks:
  sso:

volumes:
  keycloak_db:
    driver: local

services:

  keycloak:
    build: 
      context: .
      args:
        - KC_FEATURES
        - KC_METRICS_ENABLED
    environment:
      - KC_DB_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}?ssl=allow
      - KC_DB_USERNAME=${POSTGRES_NON_ROOT_USER}
      - KC_DB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - KEYCLOAK_ADMIN
      - KEYCLOAK_ADMIN_PASSWORD
      - KC_HTTP_ENABLED
      - KC_HOSTNAME=www.keycloak.lan:8443
      - KC_HOSTNAME_STRICT
      - KC_HTTPS_CERTIFICATE_FILE
      - KC_HTTPS_CERTIFICATE_KEY_FILE
    volumes:
      - ./etc/tls/tls-ca:/etc/ssl/certs/keycloak
    ports:
      - "8080:8080"
      - "8443:8443"
      - "8787:8787"
    depends_on:
      db:
        condition: service_healthy
    networks:
      sso:
        aliases:
          - keycloak
          - sso
          - login

  db:
    image: postgres:11
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
      - PGDATA= /var/lib/postgresql/data/pgdata
    ports:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - ./etc/scripts/init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
      - keycloak_db:/var/lib/postgresql/data/pgdata
    networks:
      sso:
        aliases:
          - postgres